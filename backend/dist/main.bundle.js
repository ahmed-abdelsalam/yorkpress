(()=>{var s={62:s=>{s.exports=[{grade:"K1",firstName:"Student",lastName:"EN",email:"student@york-e.com",schoolId:"schYpEN01",avatar:"books"},{grade:"K1",firstName:"Student",lastName:"Two",email:"student-two@york-e.com",schoolId:"schYpEN01",avatar:"ladybird"},{grade:"K1",firstName:"Student",lastName:"Three",email:"student-three@york-e.com",schoolId:"schYpEN01",avatar:"paint"},{grade:"K1",firstName:"Student",lastName:"Four",email:"student-four@york-e.com",schoolId:"schYpEN01",avatar:"tableTennis"},{grade:"K1",firstName:"Student",lastName:"Five",email:"student-five@york-e.com",schoolId:"schYpEN01",avatar:"tomato"},{grade:"K1",firstName:"Student",lastName:"Invited",email:"student-invited@york-e.com",schoolId:"schYpEN01",avatar:"chocolate"}]},169:s=>{s.exports=[{id:"1",path:"/public/sample.pdf",type:"book"},{id:"2",path:"/public/audiosample.mp3",type:"audio"},{id:"3",path:"/public/cards.pdf",type:"book"}]},479:s=>{"use strict";s.exports=require("cors")},127:s=>{"use strict";s.exports=require("express")}},e={};function t(a){var o=e[a];if(void 0!==o)return o.exports;var n=e[a]={exports:{}};return s[a](n,n.exports,t),n.exports}(()=>{"use strict";const s=require("typeorm"),e=t(127),a=t(479),o=(t(62),t(169)),{PORT:n=3e3}=process.env;(async()=>{const t=await(0,s.createConnection)(),r=e();r.use(a()),r.options("*",a()),r.use(e.json()),r.use("/public",e.static("resources"));const d=e.Router();d.get("/resources",((s,e)=>{e.json({resources:o})})),d.get("/students",(async(s,e)=>{let a=await t.getRepository("student").find();e.json(a)})),d.get("/students/:studentId(\\d+)",(async(s,e)=>{let a=await t.getRepository("student").findOne({id:s.params.studentId});e.json(a)})),d.get("/assignments",(async(s,e)=>{const a=await t.getRepository("assignment").find({relations:["questions"]});e.json(a)})),d.get("/classrooms",(async(s,e)=>{let a=await t.getRepository("class_room").find();e.json(a)})),d.get("/classrooms/:classId(\\d+)",(async(s,e)=>{let a=await t.getRepository("class_room").findOne({id:s.params.classId,relations:["students","assignments"]});e.json(a)})),d.get("/classrooms/:classId(\\d+)/students",(async(s,e)=>{let a=await t.getRepository("class_room").findOne({id:s.params.classId,relations:["students"]});e.json(a.students)})),d.get("/classrooms/:classId(\\d+)/assignments",(async(s,e)=>{const a=await t.getRepository("class_room").findOne({id:s.params.classId,relations:["assignments"]});e.json(a.assignments)})),d.post("/assignment",((s,e)=>{const t=[];return s.body.name||t.push("Please add an assignment name"),s.body.date||t.push("Please add an assignment due date"),s.body.resources||t.push("Please add a least 1 resource for the assignment"),s.body.students||t.push("Please provide a list of students assigned to the task"),t.length>0?e.status(400).json({messages:t}):e.status(201).json({message:"Accepted assignment response successfully"})})),d.post("/asset",((s,e)=>{const t=[];return s.body.name||t.push("Please add an assignment name"),s.body.date||t.push("Please add an assignment due date"),s.body.resources||t.push("Please add a least 1 resource for the assignment"),s.body.students||t.push("Please provide a list of students assigned to the task"),t.length>0?e.status(400).json({messages:t}):e.status(201).json({message:"Accepted assignment response successfully"})})),r.use("/",d);const i=r.listen(n,(()=>{const{address:s,port:e}=i.address();console.log(`Listening: http://${s}:${e}`)}))})().then((()=>{console.log("Started server")}))})()})();